Напишите класс Logger для логирования

Создайте класс Logger, который будет расширять EventEmitter.

constructor(filename, maxSize): Конструктор класса. Принимает два аргумента:

filename (строка) - имя файла лога, в который будут записываться сообщения.
maxSize (число) - максимальный размер файла лога в байтах.

Логи записываются в начало и обрезаются с конца, когда файл превышает maxSize.

В конструктор инициализируем поля объекта:
имя файла(filename)
максимальный размер(maxSize)
очередь логов(logQueue - array)
флаг записи(writing - boolean)
Определите методы:
log(message): добавляет сообщение в начало logQueue и вызывает метод writeLog, если запись в файл в данный момент не выполняется, устанавливает флаг writing в значение true.
writeLog(): Записывает файл лога из массива logQueue и очищает его. Генерирует событие 'messageLogged'. Вызывает метод проверки размера файла checkFileSize.
Если в массиве logQueue есть еще сообщения лога, рекурсивно вызывает метод writeLog.
Если в массиве logQueue больше нет сообщений лога, устанавливает флаг writing в значение false.
getFileSize(): с помощью fs.stat получает информацию о размере файла и возвращает его размер в байтах. Если возникает ошибка при получении информации о файле, возвращает 0.
checkFileSize(): Если текущий размер файла превышает максимальный размер, вызывает метод rotateLog для выполнения ротации лога.
rotateLog(): Создает резервную копию файла с расширением .bak (копируя текущий лог-файл), затем обрезает текущий лог-файл с помощью метода fs.truncate
